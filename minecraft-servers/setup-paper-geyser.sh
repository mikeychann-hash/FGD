#!/bin/bash

# Paper + Geyser Setup Script
# This script downloads and configures Paper server with Geyser plugin

set -e

PAPER_VERSION="1.21.1"  # Change this to your desired Minecraft version
PAPER_BUILD="latest"    # Or specify a specific build number
GEYSER_VERSION="latest"

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SERVER_DIR="$SCRIPT_DIR/paper-server"
PLUGINS_DIR="$SERVER_DIR/plugins"

echo "========================================="
echo "Paper + Geyser Setup Script"
echo "========================================="
echo "Minecraft Version: $PAPER_VERSION"
echo "Server Directory: $SERVER_DIR"
echo ""

# Create directories
mkdir -p "$SERVER_DIR"
mkdir -p "$PLUGINS_DIR"

cd "$SERVER_DIR"

# Download Paper if not exists
if [ ! -f "paper.jar" ]; then
    echo "Downloading Paper $PAPER_VERSION..."

    # Get the latest build number for the version
    if [ "$PAPER_BUILD" = "latest" ]; then
        echo "Fetching latest build info..."
        BUILD_NUMBER=$(curl -s "https://api.papermc.io/v2/projects/paper/versions/$PAPER_VERSION" | grep -o '"builds":\[[0-9,]*\]' | grep -o '[0-9]*' | tail -1)

        if [ -z "$BUILD_NUMBER" ]; then
            echo "Error: Could not fetch latest build number for Paper $PAPER_VERSION"
            echo "Please check if version $PAPER_VERSION is available at https://papermc.io/downloads"
            exit 1
        fi
    else
        BUILD_NUMBER="$PAPER_BUILD"
    fi

    echo "Downloading Paper build #$BUILD_NUMBER..."
    DOWNLOAD_URL="https://api.papermc.io/v2/projects/paper/versions/$PAPER_VERSION/builds/$BUILD_NUMBER/downloads/paper-$PAPER_VERSION-$BUILD_NUMBER.jar"

    curl -o paper.jar -L "$DOWNLOAD_URL"

    if [ $? -ne 0 ]; then
        echo "Error: Failed to download Paper"
        echo "URL attempted: $DOWNLOAD_URL"
        exit 1
    fi

    echo "✓ Paper downloaded successfully"
else
    echo "✓ Paper server already exists (paper.jar)"
fi

# Download Geyser if not exists
if [ ! -f "$PLUGINS_DIR/Geyser-Spigot.jar" ]; then
    echo ""
    echo "Downloading Geyser plugin..."

    cd "$PLUGINS_DIR"

    # Get latest Geyser build
    echo "Fetching latest Geyser build info..."
    GEYSER_URL="https://download.geysermc.org/v2/projects/geyser/versions/latest/builds/latest/downloads/spigot"

    curl -o Geyser-Spigot.jar -L "$GEYSER_URL"

    if [ $? -ne 0 ]; then
        echo "Error: Failed to download Geyser"
        exit 1
    fi

    echo "✓ Geyser downloaded successfully"
else
    echo "✓ Geyser plugin already exists"
fi

cd "$SERVER_DIR"

# Create eula.txt
if [ ! -f "eula.txt" ]; then
    echo ""
    echo "Creating eula.txt (you are agreeing to Minecraft's EULA)..."
    echo "# By changing the setting below to TRUE you are indicating your agreement to Minecraft's EULA (https://aka.ms/MinecraftEULA)." > eula.txt
    echo "eula=true" >> eula.txt
    echo "✓ EULA accepted"
fi

# Create server.properties with RCON enabled
if [ ! -f "server.properties" ]; then
    echo ""
    echo "Creating server.properties with RCON enabled..."
    cat > server.properties << 'EOF'
# Minecraft server properties
# Generated by FGD setup script

# Server Settings
server-port=25565
server-ip=
max-players=20
motd=FGD AICraft Server - Paper + Geyser
online-mode=true
allow-flight=true
difficulty=normal
gamemode=survival
pvp=true

# RCON Configuration (Required for FGD Dashboard)
enable-rcon=true
rcon.port=25575
rcon.password=fgd_rcon_password_change_me
broadcast-rcon-to-ops=true

# World Settings
level-name=world
level-seed=
level-type=minecraft\:normal
spawn-protection=16
view-distance=10
simulation-distance=10

# Performance
max-tick-time=60000
network-compression-threshold=256
sync-chunk-writes=true

# Other
white-list=false
enforce-whitelist=false
spawn-npcs=true
spawn-animals=true
spawn-monsters=true
generate-structures=true
EOF
    echo "✓ server.properties created"
    echo "  RCON Port: 25575"
    echo "  RCON Password: fgd_rcon_password_change_me"
    echo "  ⚠️  IMPORTANT: Change the RCON password in server.properties!"
fi

# Create start script
echo ""
echo "Creating start script..."
cat > start.sh << 'EOF'
#!/bin/bash

# Paper Server Start Script
# Adjust memory settings (-Xms and -Xmx) based on your system

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$SCRIPT_DIR"

# Memory settings (adjust as needed)
MIN_RAM="2G"
MAX_RAM="4G"

# Java arguments for performance
JAVA_ARGS="-Xms$MIN_RAM -Xmx$MAX_RAM -XX:+UseG1GC -XX:+ParallelRefProcEnabled -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+DisableExplicitGC -XX:+AlwaysPreTouch -XX:G1HeapWastePercent=5 -XX:G1MixedGCCountTarget=4 -XX:G1MixedGCLiveThresholdPercent=90 -XX:G1RSetUpdatingPauseTimePercent=5 -XX:SurvivorRatio=32 -XX:+PerfDisableSharedMem -XX:MaxTenuringThreshold=1 -Dusing.aikars.flags=https://mcflags.emc.gs -Daikars.new.flags=true"

echo "Starting Paper server..."
echo "Memory: $MIN_RAM - $MAX_RAM"
echo ""

java $JAVA_ARGS -jar paper.jar --nogui

echo ""
echo "Server stopped."
EOF

chmod +x start.sh
echo "✓ Start script created (start.sh)"

echo ""
echo "========================================="
echo "Setup Complete!"
echo "========================================="
echo ""
echo "Next Steps:"
echo "1. Edit server.properties and change RCON password"
echo "2. Configure Geyser in plugins/Geyser-Spigot/config.yml (after first run)"
echo "3. Update FGD minecraft_bridge.js with RCON credentials"
echo "4. Start the Paper server: cd minecraft-servers/paper-server && ./start.sh"
echo "5. Start the FGD dashboard: ./start-server.sh"
echo ""
echo "Server Ports:"
echo "  - Java Edition: 25565"
echo "  - Bedrock Edition: 19132 (UDP, configured in Geyser)"
echo "  - RCON: 25575"
echo "  - FGD Dashboard: 3000"
echo ""
echo "⚠️  IMPORTANT:"
echo "  - Change RCON password in server.properties"
echo "  - Configure Geyser settings after first server start"
echo "  - Open ports in firewall if needed"
echo ""
